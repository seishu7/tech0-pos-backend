"use client";

import { useState } from "react";

export default function POSPage() {
  const [code, setCode] = useState("");
  const [product, setProduct] = useState(null);
  const [error, setError] = useState("");
  const [list, setList] = useState([]);
  const [quantities, setQuantities] = useState({});

  const handleRead = async () => {
    try {
      const res = await fetch(`http://localhost:8000/product?code=${code}`);
      if (!res.ok) throw new Error("商品が見つかりません");
      const data = await res.json();
      setProduct(data);
      setError("");
    } catch (err) {
      setProduct(null);
      setError("商品マスタ未登録です");
    }
  };

  const handleAdd = () => {
    if (product) {
      setList((prev) => [...prev, product]);
      setQuantities((prev) => ({ ...prev, [product.CODE]: (prev[product.CODE] || 0) + 1 }));
      setProduct(null);
      setCode("");
    }
  };

  const handleQuantity = (code, delta) => {
    setQuantities((prev) => {
      const updated = { ...prev, [code]: Math.max(1, (prev[code] || 1) + delta) };
      return updated;
    });
  };

  const handlePurchase = async () => {
    const payload = {
      emp_cd: "9999999999",
      products: list.map((item) => ({ ...item, qty: quantities[item.CODE] || 1 })),
    };
    const res = await fetch("http://localhost:8000/purchase", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });
    const data = await res.json();
    alert(`\u{1F64F} ご購入ありがとうございます！\n合計金額: ${data.total_amount} 円`);
    setList([]);
    setQuantities({});
  };

  const totalAmount = list.reduce((sum, item) => sum + item.PRICE * (quantities[item.CODE] || 1), 0);

  return (
    <div className="min-h-screen bg-gray-900 text-white p-6">
      <h1 className="text-center text-2xl font-bold mb-6">TECHONE SHOP</h1>

      <div className="bg-white text-black rounded-xl shadow-md p-6 max-w-md mx-auto space-y-4">
        <label className="block font-semibold text-gray-700">商品コード入力・スキャン</label>
        <input
          type="text"
          className="border-2 border-orange-400 focus:border-pink-400 focus:ring focus:ring-pink-200 focus:outline-none bg-white text-black p-3 rounded w-full text-lg"
          placeholder="例: LOC-001"
          value={code}
          onChange={(e) => setCode(e.target.value)}
        />
        <button
          onClick={handleRead}
          className="w-full py-2 rounded text-white font-semibold bg-gradient-to-r from-orange-400 to-pink-500"
        >
          商品を検索
        </button>

        {product && (
          <div className="p-2 mt-4 border rounded text-sm">
            <div className="font-bold">{product.NAME}</div>
            <div>価格: {product.PRICE} 円</div>
          </div>
        )}
        {error && <div className="text-red-500 text-sm">{error}</div>}

        <button
          onClick={handleAdd}
          disabled={!product}
          className="w-full py-2 bg-blue-500 text-white rounded mt-2"
        >
          買い物カゴに追加
        </button>
      </div>

      <div className="max-w-md mx-auto mt-6 bg-white text-black rounded-xl shadow p-6">
        <h2 className="text-center text-lg font-bold mb-4">
          合計金額
        </h2>
        <div className="text-center text-pink-600 text-2xl font-bold">
          {totalAmount} 円
        </div>
      </div>

      <div className="max-w-md mx-auto mt-6 bg-white text-black rounded-xl shadow p-6">
        <h3 className="font-bold mb-3">
          買い物カゴ
        </h3>
        {list.map((item, index) => (
          <div key={index} className="mb-3 p-3 border rounded bg-gray-50">
            <div className="font-semibold">{item.NAME}</div>
            <div className="flex items-center justify-between mt-2">
              <div className="flex items-center gap-2">
                <span className="text-sm">数量:</span>
                <button
                  onClick={() => handleQuantity(item.CODE, -1)}
                  className="w-6 h-6 bg-gray-300 text-black rounded-full text-sm"
                >
                  -
                </button>
                <span>{quantities[item.CODE] || 1}</span>
                <button
                  onClick={() => handleQuantity(item.CODE, 1)}
                  className="w-6 h-6 bg-gray-600 text-white rounded-full text-sm"
                >
                  +
                </button>
              </div>
              <div className="text-sm">単価: {item.PRICE} 円</div>
            </div>
          </div>
        ))}
      </div>

      <div className="max-w-md mx-auto mt-6">
        <button
          onClick={handlePurchase}
          disabled={list.length === 0}
          className="w-full py-3 rounded text-white text-lg font-semibold bg-green-600 hover:bg-green-700"
        >
          購入する
        </button>
      </div>
    </div>
  );
}
